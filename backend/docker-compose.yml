# cf. https://laravel.com/docs/sail
# cf. https://docs.docker.com/compose/compose-file/#compose-file
# cf. https://docs.docker.com/compose/compose-file/build
services:
  nginx:
    # cf. https://hub.docker.com/_/nginx
    image: 'nginx:1.25'
    environment:
      DOCKER_WORKDIR: '${DOCKER_WORKDIR}'
      APP_ENV: '${APP_ENV}'
      SERVER_NAME: '${APP_DOMAIN}'
    ports:
      - '${APP_PORT:-8080}:80'
    volumes:
      # cf. https://docs.docker.com/compose/compose-file/05-services/#long-syntax-5
      # cf. https://docs.docker.com/desktop/previous-versions/edge-releases-mac/#docker-desktop-community-2330
      - type: bind
        source: './public'
        target: '${DOCKER_WORKDIR}/public'
        consistency: ro
      # cf. https://hub.docker.com/_/nginx - Using environment variables
      - type: bind
        source: './docker/nginx/default.conf'
        target: '/etc/nginx/templates/default.conf.template'
        consistency: ro
      - type: bind
        source: './docker/nginx/${APP_ENV}.conf'
        target: '/etc/nginx/templates/${APP_ENV}.conf.template'
        consistency: ro
    depends_on:
      php-fpm:
        condition: service_started
  php-fpm:
    build:
      # As relative path origin in `Dockerfile`
      # e.g. if it's `.`, `package.json` etc can be referenced as is,
      # but cannot if it's `./docker` etc. as parent path can't be reached.
      context: '.'
      dockerfile: './docker/app/Dockerfile'
      target: '${APP_ENV}'
      args:
        PHP_VERSION: '${PHP_VERSION}'
        WORKDIR: '${DOCKER_WORKDIR}'
        USER: '${WEB_USER}'
    image: '${USER}/${COMPOSE_PROJECT_NAME}:${APP_ENV}'
    environment:
      LC_ALL: 'C.UTF-8'
    # Starting directory in logining the container
    working_dir: '${DOCKER_WORKDIR}'
    volumes:
      - type: bind
        source: '.'
        target: '${DOCKER_WORKDIR}'
        consistency: delegated
      - type: volume
        source: 'vendor'
        target: '${DOCKER_WORKDIR}/vendor'
      - type: volume
        source: 'node_modules'
        target: '${DOCKER_WORKDIR}/node_modules'
    depends_on:
      mysql:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
  mysql:
    # cf. https://hub.docker.com/_/mariadb
    image: 'mariadb:10'
    ports:
      - '${FORWARD_DB_PORT:-3307}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - 'mysql:/var/lib/mysql'
      - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh:ro'
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-p${DB_PASSWORD}']
      retries: 3
      timeout: 5s
  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6380}:6379'
    volumes:
      - 'redis:/data'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      retries: 3
      timeout: 5s
  # https://github.com/axllent/mailpit
  mailpit:
    image: 'axllent/mailpit:latest'
    ports:
      - '${FORWARD_MAILPIT_PORT:-1025}:1025'
      - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
volumes:
  vendor:
    driver: local
  node_modules:
    driver: local
  mysql:
    driver: local
  redis:
    driver: local
