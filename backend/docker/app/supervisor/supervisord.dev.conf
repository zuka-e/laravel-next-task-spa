; http://supervisord.org/configuration.html

[supervisord]
nodaemon = true
user = %(ENV_USER)s
logfile = %(ENV_WORK_DIR)s/storage/logs/supervisord.log
pidfile = /tmp/supervisord.pid

; As seen in the PHP Docker image, `php-fpm` (`CMD`) will be run
; by being read by `ENTRYPOINT` (`.../bin/docker-php-entrypoint`) as its arg.
; Since my `Dockerfile` adds `ENTRYPOINT` and overrides the default, run `php-fpm` here.
[program:php-fpm]
command = php-fpm
autostart = true
autorestart = true
stopasgroup = true
killasgroup = true
user = %(ENV_USER)s
redirect_stderr = true
stdout_logfile = %(ENV_WORK_DIR)s/storage/logs/php-fpm.log
stopwaitsecs = 3600

; cf. https://laravel.com/docs/10.x/queues#supervisor-configuration
[program:laravel-worker]
process_name = %(program_name)s_%(process_num)02d
numprocs = 8
; > during your deployment process, be sure to restart your queue workers.
; > https://laravel.com/docs/10.x/queues#the-queue-work-command
; > a process manager such as Supervisor to automatically restart the queue workers.
; (`php artisan queue:restart`)
; > https://laravel.com/docs/10.x/queues#queue-workers-and-deployment
; In short, restart is required after updated, but not with Supervisor with `max-time`.
; cf. https://laravel.com/docs/10.x/queues#processing-jobs-for-a-given-number-of-seconds
; (After changing `max-time`, Docker rebuild is required)
command = php %(ENV_WORK_DIR)s/artisan queue:work --sleep=3 --tries=3 --max-time=3600
autostart = true
autorestart = true
stopasgroup = true
killasgroup = true
user = %(ENV_USER)s
redirect_stderr = true
stdout_logfile = %(ENV_WORK_DIR)s/storage/logs/worker.log
stopwaitsecs = 3600

; cf. https://laravel.com/docs/10.x/horizon#supervisor-configuration
[program:horizon]
process_name = %(program_name)s
command = php %(ENV_WORK_DIR)s/artisan horizon
autostart = true
autorestart = true
user = %(ENV_USER)s
redirect_stderr = true
stdout_logfile = %(ENV_WORK_DIR)s/storage/logs/horizon.log
stopwaitsecs = 3600
