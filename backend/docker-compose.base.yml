# cf. https://github.com/laravel/sail/tree/1.x/stubs
# cf. https://docs.docker.com/compose/compose-file
services:
  nginx:
    # cf. https://hub.docker.com/_/nginx
    image: nginx:1.25
    # cf. https://docs.docker.com/compose/environment-variables/env-file
    environment:
      DOCKER_WORKDIR: ${DOCKER_WORKDIR}
      APP_ENV: ${APP_ENV}
      SERVER_NAME: ${APP_DOMAIN}
    volumes:
      # cf. https://docs.docker.com/compose/compose-file/05-services/#long-syntax-5
      # cf. https://hub.docker.com/_/nginx - Using environment variables
      - type: bind
        source: ./docker/nginx/default.conf
        target: /etc/nginx/templates/default.conf.template
        read_only: true
      - type: bind
        source: ./docker/nginx/${APP_ENV}.conf
        target: /etc/nginx/templates/${APP_ENV}.conf.template
        read_only: true
      - type: bind
        source: ./public
        target: ${DOCKER_WORKDIR}/public
        read_only: true
    ports:
      - ${APP_PORT:-8080}:80
    depends_on:
      php-fpm:
        condition: service_started
  php-fpm:
    # cf. https://docs.docker.com/compose/compose-file/build
    build:
      context: ./
      dockerfile: ./docker/app/Dockerfile
      target: ${APP_ENV}
      args:
        PHP_VERSION: ${PHP_VERSION}
        WORKDIR: ${DOCKER_WORKDIR}
        USER: ${WEB_USER}
    image: ${USER}/${COMPOSE_PROJECT_NAME}:${APP_ENV}
    environment:
      SHELL: /usr/bin/bash
    volumes:
      - type: volume
        source: vendor
        target: ${DOCKER_WORKDIR}/vendor/
      - type: volume
        source: node_modules
        target: ${DOCKER_WORKDIR}/node_modules/
      # cf. https://docs.docker.com/desktop/previous-versions/edge-releases-mac/#docker-desktop-community-2330
      - type: bind
        source: ./
        target: ${DOCKER_WORKDIR}
        consistency: delegated
    depends_on:
      mysql:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
  mysql:
    # cf. https://hub.docker.com/_/mariadb
    image: mariadb:10
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${FORWARD_DB_PORT:-3307}:3306
    volumes:
      - type: volume
        source: mysql
        target: /var/lib/mysql/
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-p${DB_PASSWORD}']
      retries: 3
      timeout: 5s
volumes:
  vendor:
    driver: local
  node_modules:
    driver: local
  mysql:
    driver: local
